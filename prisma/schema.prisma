generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ShopSettings {
  id                      Int      @id @default(autoincrement())
  shopId                  String   @unique
  formFields              String?  @default("[]")
  formStyle               String?  @default("{}")
  shippingRates           String?  @default("[]")
  pixelSettings           String?  @default("{}")
  visibilityMode          String?  @default("both_cart_product")
  visibleProducts         String?  @default("[]")
  hiddenProducts          String?  @default("[]")
  allowedCountries        String?  @default("[]")
  hideAddToCart           Boolean  @default(false)
  hideBuyNow              Boolean  @default(false)
  disableOnHome           Boolean  @default(false)
  disableOnCollections    Boolean  @default(false)
  enableSpecificProducts  Boolean  @default(false)
  disableSpecificProducts Boolean  @default(false)
  enableSpecificCountries Boolean  @default(false)
  minimumAmount           String?  @default("")
  maximumAmount           String?  @default("")
  googleAccessToken       String?
  googleRefreshToken      String?
  googleUserEmail         String?
  googleSheetId           String?
  googleSheetName         String?
  googleSheetTabName      String?
  googleSheetImportOrders Boolean  @default(true)
  googleSheetImportLines  Boolean  @default(false)
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  generalSettings         String?
  userBlocking            String?
  redirectUrl             String?
  Session                 Session  @relation(fields: [shopId], references: [shop], onDelete: Cascade)

  @@index([shopId])
}

model Session {
  id             String          @id
  shop           String          @unique
  state          String
  isOnline       Boolean         @default(false)
  scope          String?
  expires        DateTime?
  accessToken    String
  userId         BigInt?
  accountOwner   Boolean?
  collaborator   Boolean?
  email          String?
  emailVerified  Boolean?
  firstName      String?
  lastName       String?
  locale         String?
  AbandonedCarts AbandonedCart[]
  AppProxy       AppProxy?
  OrderTrackings OrderTracking[]
  ShopSettings   ShopSettings?

  @@index([shop])
}

model AppProxy {
  id            Int      @id @default(autoincrement())
  shopId        String   @unique
  isEnabled     Boolean  @default(true)
  configuration String?  @default("{}")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  Session       Session  @relation(fields: [shopId], references: [shop], onDelete: Cascade)

  @@index([shopId])
}

model OrderTracking {
  id                 String   @id @default(cuid())
  shopId             String
  draftOrderId       String
  customerIp         String?
  customerEmail      String?
  customerPhone      String?
  customerPostalCode String?
  totalQuantity      Int
  orderTotal         Float
  currency           String
  createdAt          DateTime @default(now())
  Session            Session  @relation(fields: [shopId], references: [shop], onDelete: Cascade)

  @@index([shopId])
  @@index([customerEmail])
  @@index([customerPhone])
  @@index([customerIp])
  @@index([createdAt])
}

model AbandonedCart {
  id              String    @id @default(cuid())
  shopId          String
  sessionId       String    @unique
  customerEmail   String?
  customerPhone   String?
  customerName    String?
  cartData        String
  formData        String?
  abandonedAt     DateTime  @default(now())
  lastReminderAt  DateTime?
  reminderCount   Int       @default(0)
  isRecovered     Boolean   @default(false)
  recoveredAt     DateTime?
  recoveryOrderId String?
  Session         Session   @relation(fields: [shopId], references: [shop], onDelete: Cascade)

  @@index([shopId])
  @@index([customerEmail])
  @@index([abandonedAt])
  @@index([isRecovered])
}

model AlgeriaCities {
  id                 Int    @id @default(autoincrement())
  commune_name       String
  commune_name_ascii String
  daira_name         String
  daira_name_ascii   String
  wilaya_code        String
  wilaya_name        String
  wilaya_name_ascii  String

  @@map("algeria_cities")
}
